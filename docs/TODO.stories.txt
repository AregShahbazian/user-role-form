
create e2e tests

scale on mobile

*** HISTORY ***

configure redux
configure redux-saga

create routines

create reducers specs
    design state
        To represent many-to-many relations in store, use redux-orm
            https://stackoverflow.com/questions/42238802/redux-many-to-many-relationship
        Or use normalizr

create reducers

create sagas specs
create sagas

create api-function specs
create api-function and mocks

create UI components
    form with redux-form and react-widgets

Component hierarchy:

use selectors in containers

Create add-role component

delete-button
    delete removes the object from result-array
    fix fetching, get cached from result-array, not directly from entities
    * delete child-entities too:
        After deleting a role, the list of available users is not updated. This is because only the normalized
        projectUserRole entity is deleted, and the related child-entities are not cascaded
    ** OR BETTER
        select usersWithoutRole not from projectUserRoles.entities.users, but from projectUserRoles.results=>user

Handle network errors
    like 404
    for projectUserRoles Create, Update and Delete ops


style-components

clean up unused map**toprops functions

check unit test quality

check documentation

check unused routines/api functions
    leave as is